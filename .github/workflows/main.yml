name: Docker Build and Deploy

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Check Repository
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    # Шаг 4: Строим Docker-образ
    - name: Build Docker image
      run: |
        docker build -t myapp .

    # Шаг 5: Тестируем контейнер (если у вас есть тесты)
    - name: Run tests
      run: |
        docker run myapp pytest  # Замените на команду для тестирования, если нужно

    # Шаг 6: Публикуем Docker-образ в Docker Hub (если необходимо)
    - name: Push Docker image to Docker Hub
      run: |
        docker tag myapp ${{ secrets.DOCKER_USERNAME }}/myapp:${{ github.sha }}
        docker push ${{ secrets.DOCKER_USERNAME }}/myapp:${{ github.sha }}

  deploy:
    runs-on: ubuntu-latest
    needs: build  # Этот шаг запускается после успешного завершения шага build

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    # Шаг 1: Настроим SSH для деплоя на сервер
    - name: Set up SSH
      uses: webfactory/ssh-agent@v0.5.3
      with:
        ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

    # Шаг 2: Деплой контейнера на сервер
    - name: Deploy to server
      run: |
        ssh -o StrictHostKeyChecking=no user@your_server_ip "
          docker pull ${{ secrets.DOCKER_USERNAME }}/myapp:${{ github.sha }} && \
          docker stop myapp || true && \
          docker rm myapp || true && \
          docker run -d --name myapp -p 8000:8000 ${{ secrets.DOCKER_USERNAME }}/myapp:${{ github.sha }}"
